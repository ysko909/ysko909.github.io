<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on 頑張らないために頑張る</title>
    <link>https://ysko909.github.io/tags/windows/</link>
    <description>Recent content in Windows on 頑張らないために頑張る</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© Copyright ysko</copyright>
    <lastBuildDate>Tue, 22 Jul 2025 10:57:43 +0900</lastBuildDate>
    
	<atom:link href="https://ysko909.github.io/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Windows11でリモートデスクトップ接続がエラーコード0x3で切断される</title>
      <link>https://ysko909.github.io/posts/remote-desktop-disconnected-with-error-code-0x3-in-windows11/</link>
      <pubDate>Tue, 22 Jul 2025 10:57:43 +0900</pubDate>
      
      <guid>https://ysko909.github.io/posts/remote-desktop-disconnected-with-error-code-0x3-in-windows11/</guid>
      <description>概要 2025年6月ごろ？あたりから、Windows 11のPC環境へのリモートデスクトップ接続時に、「エラーコード 0x3」エラーメッセージと共にセッションが突然終了する事象が発生するようになりました。この切断ですが、リモートデスクトップ接続を開始してから短い場合だと30秒くらいでエラーを吐きつつ切断されてしまうため、かなりストレスです。いつまで経ってもエラーが出ず、正常に接続が継続されるケースもあるので、余計鬱陶しさに拍車がかかります。
というわけで、このエラーをどうにかすべく調査した備忘録です。結果的に自分の環境では接続状況が改善しましたが、他の環境で改善することを保証するものではないので、その点ご了承ください。
エラー内容 表示されるエラーは、下記のようなメッセージです。
[Window Title] リモート デスクトップ接続 [Content] リモート デスクトップ サービス セッションが終了しました。次のいずれかが原因と考えられます: 管理者がこのセッションを終了させました。 接続の確立中にエラーが発生しました。 ネットワークに問題が発生しました。 この問題を解決するためのヘルプ情報については、ヘルプとサポートで、リモート デスクトップに関するセクションを参照してください。 [^] 詳細の非表示(D) [OK] [Expanded Information] エラー コード: 0x3 拡張エラー コード: 0x11 タイムスタンプ (UTC): mm/dd/yy hh:mm:ss xx 上記はアクセスしている側のPC、つまりアクセス元に表示されるエラーですが、アクセス先のPCにも内容は異なるもののエラーがイベントに記録されていました。
「Microsoft Remote Display Adapter」・・・？知らんぞ、そんなもの。調べてみると、デバイスマネージャーのディスプレイアダプター内に存在するデバイスでした。
コイツか・・・どうしてくれようか。
原因を探る この場合では、グラフィックスドライバーの不具合と判断しました。上記のエラーメッセージにも「ユーザーモードドライバーのクラッシュのため」というメッセージが存在し、「デバイスに一時的にアクセスできない」という状況から、この「Microsoft Remote Display Adapter」というデバイスについて何らかの異常が発生している、と考えます。
リモートデスクトップは、アクセス先PCのグラフィックスドライバー（特にWDDM: Windows Display Driver Model）を利用して画面をレンダリングします。このドライバーに何らかの問題や不具合があると、セッションが不安定になり切断の原因となります。
解決策 ドライバーが原因なら、基本的な対処はドライバーを更新するか修復するかです。つまり、アクセス先PCのグラフィックスドライバーが古い、または破損している可能性を考慮し、グラフィックスカードの製造元から最新のドライバーをダウンロードしてインストールを実行することで、エラーを解消するわけです。なお、今回ドライバーインストールを実施する対象は、リモートデスクトップ接続のアクセス先PCです。
 製造元の公式サイトにアクセスし、最新のドライバーをダウンロードします。 インストーラーの指示に従い、インストールを実行します。 インストール後、PCを再起動します。  ここで、既存のドライバーがインストールしようとしているドライバーと同じバージョンだったとしても、既存のドライバーが破損している可能性を考慮して必要なドライバーはすべてインストールすることをオススメします。
また、インストーラーによっては「クリーンインストール」か「カスタムインストール」を選択できる場合があるかもしれませんが、この場合はクリーンインストールのほうがいいかもしれません。というのも、グラフィックスドライバーに含まれるもののうち何が原因でこのエラーが出ているかがはっきりしないため、特定のドライバーのみをピックアップしてインストールする「カスタムインストール」とは相性が悪いためです。
上記の方法に従いドライバーを再インストールしたところ、リモートデスクトップ接続が安定するようになりました。よかった。
備考 このエラーについてネットの記事を探すと、「Microsoft Remote Display Adapterを無効にする」という処置を「この問題の解決方法」として書いている記事があります。
ところが、「Microsoft Remote Display Adapter」を無効にした場合、そもそもリモートデスクトップ接続ができなくなります。正確には、「リモートデスクトップ接続自体は成立するものの、画面が表示されず操作不可になる」です。リモートデスクトップ接続において、画面を共有するためのデバイスを無効にするんだから、さもありなんという感じではあります。</description>
    </item>
    
    <item>
      <title>PowerShellを使ってISOファイルを作成する方法</title>
      <link>https://ysko909.github.io/posts/create-iso-file-in-powershell/</link>
      <pubDate>Fri, 02 May 2025 11:28:47 +0900</pubDate>
      
      <guid>https://ysko909.github.io/posts/create-iso-file-in-powershell/</guid>
      <description>概要 この記事では、Windows 10/11環境下において、フォルダの内容をISOファイルとしてアーカイブする際に、信頼性を懸念される第三者製ツールを用いることなく、標準搭載されたPowerShellの機能のみで実現する方法について解説します。
従来、New-ISOFileコマンドレットがISOファイル作成の簡便な手段として存在しましたが、現在、標準的な提供はされていません。しかしながら、コミュニティによって開発された代替スクリプトを活用することで、PowerShell単体でフォルダからISOファイルを生成することが可能です。
本稿では、その代替スクリプトを利用し、PowerShellのみでフォルダからISOファイルを生成する手順を解説します。
PowerShellによるISOファイル作成の利点  セキュリティ: 不明な第三者製ソフトウェアの導入を回避し、セキュリティ上のリスクを低減できます。 簡便性: 基本的にWindowsにはPowerShellが既にインストールされているため、追加のソフトウェアは不要です。 自動化: スクリプトによる実行により、ISOファイル作成処理の自動化が可能です。  必要なスクリプトの取得 本稿で解説する方法では、以下の2つのPowerShell関数を使用します。
 New-ISOFileFromFolder: 指定されたフォルダの内容に基づいてISOファイルを作成する主要な関数。 Write-IStreamToFile: ストリームデータをファイルに書き出すための補助関数。  これらの関数は、PowerShell Galleryにて公開されています。以下の手順に従い、これらの関数をお客様の環境で利用可能な状態にしてください。
PowerShellの起動 まずPowerShellを起動します。スタートメニューから「powershell」を検索し実行してください。この際、管理者権限である必要はありません。
スクリプトの定義 次に、以下の2コードをそれぞれPowerShellコンソールにコピー＆ペーストし、実行（改行キーを押下）します。これにより、New-ISOFileFromFolder関数とWrite-IStreamToFile関数が現在のPowerShellセッションで使用可能になります。
まずWrite-IStreamToFile関数です。
function Write-IStreamToFile([__ComObject] $istream, [string] $fileName) { # NOTE: We cannot use [System.Runtime.InteropServices.ComTypes.IStream], # since PowerShell apparently cannot convert an IStream COM object to this # Powershell type. (See http://stackoverflow.com/a/9037299/223837 for # details.) # It turns out that .NET/CLR _can_ do this conversion.</description>
    </item>
    
    <item>
      <title>Windowsでドット付ファイルを作成する</title>
      <link>https://ysko909.github.io/posts/make-file-with-dot-on-windows/</link>
      <pubDate>Mon, 22 Apr 2019 13:06:22 +0900</pubDate>
      
      <guid>https://ysko909.github.io/posts/make-file-with-dot-on-windows/</guid>
      <description>結論 ファイル名の冒頭および語尾の両方にドットを付与！
小ネタです .gitignoreとか.bashrcのように、何かの設定ファイルは冒頭に「.（ドット）」が付いて拡張子なしであるような名前だったりします。
ところが、Windowsのexplorer上でドット付のファイルを作成しようとしたらエラーになりました。
たとえば.hogeという名前のファイルを作成しようとします。
こんな名前のファイルを作成しようとすると・・・
エラー！
対策 そういう場合は、下記のようにファイル名の冒頭および語尾の両方にドットを付与してやるとファイルを作成できます。
.hoge. すると・・・
「はい」を押せばドット付ファイルのできあがりです。</description>
    </item>
    
  </channel>
</rss>