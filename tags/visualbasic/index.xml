<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visualbasic on 頑張らないために頑張る</title>
    <link>https://ysko909.github.io/tags/visualbasic/</link>
    <description>Recent content in Visualbasic on 頑張らないために頑張る</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© Copyright ysko</copyright>
    <lastBuildDate>Sun, 22 Jun 2025 10:21:55 +0900</lastBuildDate>
    
	<atom:link href="https://ysko909.github.io/tags/visualbasic/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Accessレポートの調査も相変わらず苦行なので分析用コードを作った</title>
      <link>https://ysko909.github.io/posts/create-code-to-analyze-access-mdb-reports/</link>
      <pubDate>Sun, 22 Jun 2025 10:21:55 +0900</pubDate>
      
      <guid>https://ysko909.github.io/posts/create-code-to-analyze-access-mdb-reports/</guid>
      <description>背景と目的 Microsoft Accessで長期間運用されているデータベースシステムでは、レポート機能が業務上重要な役割を担っていることが多くあります。とくに紙ベースで運用されてきた現場などでは顕著でしょう。しかし、システムの改修やWebアプリケーションへの移行などを検討する際、これらのレポートの正確な仕様を把握することは大きな課題となります。ドキュメントが古くなっていたり、そもそも存在しなかったりする場合、手作業で各レポートのデザインやVBAコードを調査するには膨大な時間と労力が必要です。
つまり、これも大抵の場合はメチャクチャ大変ってことです＿(　_´ω`)_ﾍﾟｼｮ
このVBAスクリプトは、このような背景から既存のAccessデータベース内に存在するすべてのレポートオブジェクトの技術的な仕様を自動的に調査・分析し、その結果をMarkdown形式のレポートとして出力することを目的としています。
このコードは、これらの課題に対応するため、以下のニーズに応えることを目指しています。
 レポート仕様の効率的な把握: プロジェクト内の全レポートについて、データソース、レイアウト、表示項目、VBAコードやマクロの利用状況、ページ設定といった技術仕様を自動的に抽出し、一覧化します。 標準化されたドキュメントの自動生成: 分析結果を、構造化され視覚的に理解しやすいMarkdown形式で、レポートごとに出力します。これにより、システム仕様書や移行ドキュメントの基礎資料を効率的に作成できます。 移行・改修計画の支援: Webアプリケーションなど新しいシステムへレポート機能を移行する際に、既存レポートの機能を正確に理解し、新システムでの要件定義や設計を行うための客観的な情報を提供します。 現状把握とブラックボックス化の軽減: 詳細な仕様が不明なレポートについても、その構造や設定の概要を可視化し、理解の一助とします。  実行環境 今回のソースコードは、以下の環境で動作を確認しています。
 Office Professional 2021 Visual Basic for Applications 7.1  ソースコード Option Compare Database Option Explicit &amp;#39; 統合MDB分析ツール (全フォームのVBAコード分析対応) &amp;#39; データベース構造の包括的な把握と、新システム移行のための機能分析を支援 Sub AnalyzeAllReportSpecificationsToMarkdown() &amp;#39; プロジェクト内の全レポートの仕様を調査し、個別のMarkdownレポートを生成する Dim rptObj As AccessObject Dim reportName As String Dim strFilePath As String Dim intFileNum As Integer Dim vbProj As Object &amp;#39; As VBIDE.VBProject Dim vbCrntProj As Object &amp;#39; As Application.</description>
    </item>
    
    <item>
      <title>Accessフォームの調査も苦行なので分析用コードを作った</title>
      <link>https://ysko909.github.io/posts/create-code-to-analyze-access-mdb-forms/</link>
      <pubDate>Mon, 09 Jun 2025 10:33:54 +0900</pubDate>
      
      <guid>https://ysko909.github.io/posts/create-code-to-analyze-access-mdb-forms/</guid>
      <description>背景と目的 Microsoft Accessで開発されたアプリケーション、特に多くのフォームを持つものは、時間と共に内部のVBAコードが複雑化し、その全体像を把握することが難しくなる傾向があります。ドキュメントが古くなったり、存在しなかったりすると、システムのメンテナンス、改修、さらには将来的な移行計画において、大きな困難とリスクを伴います。
つまり、大抵の場合はメチャクチャ大変ってことです＿(　_´ω`)_ﾍﾟｼｮ
小規模なシステムならともかく、年月を経るに従って大抵は規模が大きくなります。そのため、手作業で各フォームのVBAコードを調査し、その内容を理解・整理するには膨大な時間と労力が必要です。
そこで、現状のシステムに含まれるフォームについて、構文的・構造的な特徴を抽出する分析用コードを作成しました。このVBAスクリプトは、以下のニーズに応えることを目指しています。
 網羅的な現状把握の自動化: Accessデータベース内に存在する全てのフォームを対象とし、それぞれのVBAコードに含まれる構造や特徴を自動的に抽出します。 標準化されたドキュメント生成: 分析結果を、構造化され視覚的に理解しやすいMarkdown形式のレポートとして、フォームごとに出力します。これにより、手作業によるドキュメント作成の負担を軽減し、一貫性のある基礎資料を提供します。 移行・改修の意思決定支援: 各フォームのVBAコードの複雑さ、特定のAccess機能や外部連携の使用状況、イベント処理のパターンなどを明らかにすることで、移行や改修の優先順位付け、工数見積もり、リスク評価のための客観的な情報を提供します。 コード品質に関する洞察: GoToステートメントの使用頻度やエラー処理の実装状況など、コード品質に関連する情報を収集し、改善点を見つけるための手がかりを提供します。 開発・保守の効率化: 既存コードの理解を助け、開発者間の情報共有を促進することで、開発・保守作業の効率化に貢献します。  これにより、構造的な分析はコードに任せて、人間は意味的な分析に注力できます。あくまでも、このコードが分析できるのは構造的な部分ですので、その点はご承知おきください。
なお、このコードの調査対象はフォームのみであり、Accessプロジェクトの包括的な調査は別の記事にて公開しています。良ければご参照ください。
実行環境 今回のソースコードは、以下の環境で動作を確認しています。
 Office Professional 2021 Visual Basic for Applications 7.1  ソースコード Option Compare Database Option Explicit &amp;#39; 統合MDB分析ツール (全フォームのVBAコード分析対応) &amp;#39; データベース構造の包括的な把握と、新システム移行のための機能分析を支援 Sub AnalyzeAllFormsVBACodeToMarkdown() &amp;#39; プロジェクト内の全フォームのVBAコードを分析し、個別のMarkdownレポートを生成する Dim frmObj As AccessObject Dim formName As String Dim strFilePath As String Dim intFileNum As Integer Dim vbProj As Object &amp;#39; As VBIDE.</description>
    </item>
    
    <item>
      <title>AccessMDBの調査が苦行なので分析用コードを作った</title>
      <link>https://ysko909.github.io/posts/analyze-access-file/</link>
      <pubDate>Wed, 04 Jun 2025 09:48:55 +0900</pubDate>
      
      <guid>https://ysko909.github.io/posts/analyze-access-file/</guid>
      <description>背景と目的 Accessデータベースは、その手軽さから広く利用されていますが、長期運用や複数人による改修、ドキュメントの不備などにより、内部構造が複雑化し、現状把握が困難になることがあります。よくあります。このような状況は、メンテナンス性の低下やシステム移行時のリスク増大に繋がります。このVBAソースコードは、そんなMicrosoft Accessデータベース（.mdbまたは.accdbファイル）の包括的な分析を行い、その結果をMarkdown形式のレポートとして出力します。
具体的には、データベースの構造を詳細に把握し、将来的なシステム移行や改修を検討する際に重要となる機能的な側面を特定するための情報を、Markdown形式で出力します。利用方法も簡単で、このソースコードを分析したいMDB内にコピぺして実行するだけで良いので、あとは実行結果が出力されるまで待って分析作業に着手するだけです。
このコードは、これらの課題に対応するため、以下のニーズに応えることを目指しています。
 視覚的に分かりやすいドキュメント作成：データベースの構成要素や主要なプロパティを、Markdown形式で見出し、リスト、コードブロックなどを用いて整理し、可読性の高いドキュメントを自動生成します。 効率的な現状把握：既存データベースの構造や機能概要を、整形されたレポートを通じて迅速に把握できるようにします。 移行計画・改修の初期情報収集：新システムへの移行や大規模な改修を検討する際、どの機能が重要で、どこに複雑なロジックが集中しているか、外部システムとの連携はどうか、といった初期分析情報を、より理解しやすい形式で提供します。 ブラックボックス化の軽減：詳細な仕様が不明なデータベースでも、その構造や機能の概要を、構造化されたレポートを通じて把握する手がかりを提供します。  なお、実行時間はAccessプロジェクト内オブジェクトの数やサイズに依存します。そのため、大規模なものほど処理に時間がかかりますので、処理中はコーヒーブレイクでも取ることをお勧めします(/・ω・)/
実行環境 今回のソースコードは、以下の環境で動作を確認しています。
 Office Professional 2021 Visual Basic for Applications 7.1  ソースコード Option Compare Database Option Explicit &amp;#39; 統合MDB分析ツール &amp;#39; データベース構造の包括的な把握と、新システム移行のための機能分析を支援 Sub GenerateMdbAnalysisReportMarkdown() &amp;#39; メインプロシージャ: レポート生成の起点 &amp;#39; レポート出力先を設定 Dim strFilePath As String strFilePath = CurrentProject.Path &amp;amp; &amp;#34;\MigrationAnalysisReport.md&amp;#34; &amp;#39; ファイルをオープン Dim intFileNum As Integer intFileNum = FreeFile Open strFilePath For Output As #intFileNum &amp;#39; レポートヘッダー (Markdown形式) Print #intFileNum, &amp;#34;# MDB総合分析レポート (構造把握 &amp;amp; 移行検討)&amp;#34; Print #intFileNum, &amp;#34;&amp;#34; Print #intFileNum, &amp;#34;**データベース:**`&amp;#34; &amp;amp; CurrentProject.</description>
    </item>
    
    <item>
      <title>パスワード保護されたAccessのVBAコードの保護を解除する方法</title>
      <link>https://ysko909.github.io/posts/how-to-unlock-password-protected-vba-code/</link>
      <pubDate>Fri, 16 May 2025 11:33:37 +0900</pubDate>
      
      <guid>https://ysko909.github.io/posts/how-to-unlock-password-protected-vba-code/</guid>
      <description>概要 VBAコードが、パスワードで保護されたMDBファイルを保守しなければならない。なのに前任者が退職しておりパスワードがわからない・・・というケースは往々にしてあります。このようなとき、VBAコードの保護を解除する方法について、解除できる可能性が高いと考えられる順に、いくつかの方法を検討してみます。
免責事項 ここに記載した情報は、あくまで技術的な可能性に関するものであり、特定の方法の成功を保証するものではありません。また、これらの方法の実行によって生じたいかなる損害についても責任を負いかねます。パスワード解除ツールの使用やファイルの直接編集などは、ご自身の責任と判断において、関連する法律や倫理規定を遵守の上、慎重に行ってください。
また、以下の方法における「解除できる可能性」は、完全に個人的な経験に則しています。そのため、その順番や実現可能性についても、必ずしも正確ではないことにご留意ください。
重要な前提  これから説明する方法は、もっぱら技術的な可能性に基づくものです。そのため、実行にあたっては組織内において規定されたセキュリティポリシーや法務・倫理規定を遵守することが最優先になります。 作業前には、対象のMDBファイルの完全なバックアップを必ず作成し、作業はバックアップしたコピーファイルに対して行ってください。オリジナルファイルは絶対に直接編集しないでください。 以下の方法は、パスワード保護の解除を保証するものではない点にご留意ください。ただし、パスワードロックを解除できる可能性が高いと思われる順で言及しています。  パスワード解除の方法 サードパーティ製 VBAパスワード解除・回復ツール 先ほど、「こういうケースは往々にして存在する」と述べたとおり需要は多いのでしょう、インターネット上にはVBAのパスワード解除をうたったツールが多数存在します。これらは、Access VBAのパスワードを解除したり、回復したりすることを目的とした専用のサードパーティ製ソフトウェア（有償・無償あり）です。
これらのツールは、AccessのVBAパスワード保護メカニズムの既知の弱点や特定のアルゴリズムを解析して作られていることが多く、比較的高い成功率が期待できます。前任者が設定したパスワードの複雑さやAccessのバージョンにもよりますが、多くの場合、最も手軽かつ成功の可能性が高い方法と言えます。
一般的な動作原理 ツールによって異なりますが、一般的には以下のようなアプローチを取るようです。
 パスワード情報を直接ファイルから削除または無効化する。 パスワードを特定の値（例：空文字や既知の文字列）にリセットする。 総当たり攻撃や辞書攻撃を組み合わせてパスワードを特定する（回復ツールの場合）。   手順  信頼できるVBAパスワード解除/回復ツールを選定し、入手します。 ツールをPCにインストールまたは実行します。 ツールに対象のMDBファイル（コピー）を指定します。 ツールの指示に従って、パスワード解除または回復処理を実行します。 処理後、MDBファイルを開き、VBAエディタ（Alt + F11）でコードにアクセスできるか確認します。  この方法の注意点  ツールの信頼性：インターネット上には多くのツールがありますが、中にはマルウェアやスパイウェアが含まれているものも存在します。評判の良い、信頼できる開発元やレビューの多いツールを選んでください。公式の配布元からダウンロードすることが重要です。 試用版の機能：無償版や試用版は機能が制限されている（例：パスワードの最初の数文字しか表示しない、解除機能がないなど）場合があります。 作業PCの隔離：もしツールの安全性が完全に確認できない場合は、インターネットから隔離されたテスト環境や仮想マシン上で作業することを検討してください。 アンチウイルスソフト：最新のアンチウイルスソフトでツール自体をスキャンすることも推奨されます。  データベースファイルのバイナリ編集 この方法は、MDBファイルをバイナリエディタ（Hexエディタとも呼ばれます）で直接開き、VBAプロジェクトのパスワードが格納されている特定の部分を書き換えることで、パスワード保護を無効化しようとするものです。Accessのファイル構造やVBAパスワードが格納される仕組みに関する知識があれば、直接的なアプローチとして成功する可能性があります。しかし、高度な知識と細心の注意が必要です。
手順  信頼できるバイナリエディタを入手します。 対象のMDBファイル（コピー）をバイナリエディタで開きます。 VBAプロジェクトのパスワードに関連する特定のバイトパターンやオフセットを探し出し、それを無効な値や既知の値に書き換えます。（この特定箇所を見つける情報は、インターネット上の技術フォーラムなどで共有されている場合がありますが、Accessのバージョンによって異なることがあります。） 変更を保存し、MDBファイルを開いてVBAコードにアクセスできるか確認します。  この方法の注意点  ファイル破損の非常に高いリスク：この方法は、一歩間違えるとMDBファイルを完全に破損させ、二度と開けなくなる可能性があります。作業は必ずコピーファイルに対して行い、編集箇所や元の値を正確に記録してください。 専門知識が必須：MDBファイルの内部構造や16進数データに関する深い理解が必要です。知識がないまま試みるのは極めて危険です。 情報の正確性：インターネット上で見つかる編集箇所の情報が、お使いのAccessのバージョンや状況に適合するとは限りません。誤った情報を元に編集すると、ほぼ確実にファイルを破損させます。 社内ポリシー：このような直接的なファイル編集は、社内のITセキュリティポリシーで禁止されている場合があります。事前に確認が必要です。  VBAコード抽出ツール これらのツールは、必ずしもパスワードを「解除」するわけではなく、MDBファイルからVBAコードのテキスト部分を「抽出」することを試みます。パスワードによってVBAプロジェクトへのアクセスがブロックされていても、コードデータ自体はファイル内に特定の方法で格納されているため、それをサルベージしようとするアプローチです。抽出に成功すれば、パスワード解除の手間なしでコードの内容を確認したり、新しいMDBファイルに再実装したりできる可能性があります。
手順  VBAコード抽出ツールを選定し、入手します。 ツールに対象のMDBファイル（コピー）を指定します。 ツールを実行し、VBAコードの抽出を試みます。 抽出されたコード（通常はテキストファイルなどに出力される）の内容を確認します。  この方法の注意点  ツールの信頼性：サードパーティ製解除ツールと同様に、マルウェアのリスクに注意し、信頼できるソースから入手してください。 抽出コードの完全性：抽出されたコードが完全である保証はありません。一部が欠けたり、文字化けしたり、破損している可能性があります。特にフォームやレポートに関連付けられたモジュールなど、複雑な構造の場合は正確な抽出が難しいことがあります。 パスワードは解除されない：この方法はコードを見るための一時的な手段であり、MDBファイル自体のパスワード保護が解除されるわけではありません。コードを修正して元のファイルに戻すには、やはりパスワード解除が必要です。  推測可能なパスワードの試行 もしコードの保護に用いるパスワードについて、前任者がたとえば「0000」のように非常に単純な文字列だったり、会社名、プロジェクト名など、推測しやすいものを設定していた場合に限り、成功する可能性がある方法です。つまり、正解に行きつくまで思い当たる選択肢すべてを試行する「総当たり」的な方法です。</description>
    </item>
    
  </channel>
</rss>